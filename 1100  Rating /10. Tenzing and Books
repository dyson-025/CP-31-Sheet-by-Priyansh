🧠 Tenzing and Books — Final Notes + Code
💭 Problem Summary
link: https://codeforces.com/problemset/problem/1842/B
You have 3 stacks, each with n books.
Each book has a difficulty rating (non-negative integer).
Tenzing’s knowledge starts at 0.
When he reads a book of difficulty v:

knowledge = knowledge | v


He can:

Choose any stack any time

Must read from top to bottom in a stack

Stop whenever he wants

Goal:
Check if he can make knowledge == x.

⚙️ Key Concept (Bitwise)

To reach exactly x,
you can only use books that don’t add extra bits outside x.

Condition:

(book | x) == x


If this fails, that book (and all below it in that stack) can’t be read.

🔍 Logic (Step-by-Step)

Start with knowledge = 0

For each of the 3 stacks:

Read from top until (book | x) != x

Keep OR-ing valid books into knowledge

After all stacks:

If knowledge == x → print "Yes"

Else → print "No"

💻 Clean Code (C++)
#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int t;
    cin >> t;

    while (t--) {
        int n, x;
        cin >> n >> x;

        vector<int> a(n), b(n), c(n);
        for (int i = 0; i < n; i++) cin >> a[i];
        for (int i = 0; i < n; i++) cin >> b[i];
        for (int i = 0; i < n; i++) cin >> c[i];

        int knowledge = 0;

        // Read stack A
        for (int i = 0; i < n; i++) {
            if ( (a[i] | x) == x )
                knowledge |= a[i];
            else break;
        }

        // Read stack B
        for (int i = 0; i < n; i++) {
            if ( (b[i] | x) == x )
                knowledge |= b[i];
            else break;
        }

        // Read stack C
        for (int i = 0; i < n; i++) {
            if ( (c[i] | x) == x )
                knowledge |= c[i];
            else break;
        }

        cout << (knowledge == x ? "Yes\n" : "No\n");
    }
}

🧮 Complexity

Each stack processed once → O(n) per test

Total O(sum(n)) ≤ 10^5 → ✅ Fast

✅ Example

Input

3
5 7
1 2 3 4 5
5 4 3 2 1
1 3 5 7 9
5 2
3 2 3 4 5
5 4 3 2 1
3 3 5 7 9
3 0
1 2 3
3 2 1
2 2 2


Output

Yes
No
Yes

🧠 Summary Table
Concept	Meaning
`v	x == x`
Stop on fail	Can’t go below that book
OR order	Doesn’t matter
Final check	knowledge == x
🏁 Final Formula
knowledge = OR(all valid books)
if knowledge == x → Yes
else → No
